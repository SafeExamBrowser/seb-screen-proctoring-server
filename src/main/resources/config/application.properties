spring.application.name=SEB Screen Proctoring Server
seb.sps.version=@seb-sps-version@

##########################################################
### Global Server Settings

# Server address (set for docker internal)
server.address=0.0.0.0
# Server http port
server.port=8090
# The servlet context path
server.servlet.context-path=/
server.error.path=/error
server.error.whitelabel.enabled=false

# Tomcat
server.tomcat.max-threads=2000
server.tomcat.accept-count=300
server.tomcat.uri-encoding=UTF-8

### encoding
file.encoding=UTF-8
spring.mandatoryFileEncoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

# TODO remove when not used
### servlet session handling
#server.servlet.session.cookie.http-only=true
#server.servlet.session.tracking-modes=cookie

### Logging
# Default logging level in the form  "logging.level" + namespace=LEVEL 
logging.level.ROOT=INFO
#logging.level.ch.ethz.seb.sps.server.weblayer=DEBUG
#logging.level.ch.ethz.seb.sps.server.servicelayer=DEBUG
# Log file name and location
# logging.file=/sebserver/log/sebserver.log

spring.datasource.username=root
spring.datasource.initialize=true
spring.datasource.initialization-mode=always
spring.datasource.url=jdbc:mariadb://${datastore.mariadb.server.address}:${datastore.mariadb.server.port}/SEBScreenProctoring?useSSL=false&createDatabaseIfNotExist=true
spring.flyway.enabled=true
spring.flyway.locations=classpath:config/sql/base
spring.flyway.cleanDisabled=true
spring.flyway.ignoreIgnoredMigrations=true
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.hikari.initializationFailTimeout=3000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.maximumPoolSize=10
spring.cache.jcache.config=classpath:config/ehcache.xml

### webservice security
spring.datasource.password=${mariadb.password}
sps.webservice.internalSecret=${sebserver.password}

### s3 service

sps.s3.endpointUrl=http://shelbyville:9000
sps.s3.accessKey=${s3.accessKey}
sps.s3.secretKey=${s3.secretKey}
sps.s3.bucketName=sebserver-dev
sps.s3.defaultBucketName=proctoring-bucket
sps.s3.store.batch=true


sps.init.adminaccount.generate=true
sps.init.sebserveraccount.generate=true
sps.init.sebserveraccount.username=SEBServerAPIAccount
sps.init.sebserveraccount.password=
sps.webservice.distributed=true
sps.webservice.distributed.forceMaster=false
sps.webservice.distributed.masterdelay=30000
sps.webservice.distributed.update=15000

sps.webservice.sebserver.bundle=true
sps.webservice.http.external.scheme=http
sps.webservice.http.external.servername=localhost
sps.webservice.http.external.port=${server.port}
sps.gui.redirect.url=${sps.webservice.http.external.scheme}://${sps.webservice.http.external.servername}:3000

# Define the screenshot store adapter here:
# FULL_RDBMS: all data, meta plus screenshots, go to database
# FILESYS_RDBMS: screenshots go to file-system and meta data go to database as usual

sps.data.store.adapter=FULL_RDBMS
#sps.data.store.adapter=S3_RDBMS
sps.data.store.file.dir=/screenshots/
sps.data.store.batch.interval=1000


sps.http.redirect="/"
sps.api.admin.endpoint=/admin-api
sps.api.admin.endpoint.v1=${sps.api.admin.endpoint}/v1

sps.api.admin.gui.clientId=spsGuiClient
sps.api.admin.gui.clientSecret=${spsgui.client.secret}
sps.api.admin.sebserver.clientId=sebserverClient
sps.api.admin.sebserver.clientSecret=${sebserver.client.secret}

sps.api.admin.accessTokenValiditySeconds=3600
sps.api.admin.refreshTokenValiditySeconds=25200

sps.api.session.endpoint=/seb-api
sps.api.session.endpoint.v1=${sps.api.session.endpoint}/v1
sps.api.session.accessTokenValiditySeconds=43200

